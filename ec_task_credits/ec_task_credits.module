<?php
//https://www.alloymagnetic.com/blog/192/angular-2-boilerplate-setup-small-drupal-7-applications

/** Implements hook_node_view().
 *
 **/
function ec_task_credits_node_view($node, $view_mode, $langcode) {
	if ($node->type == 'ol_todo') {
		if (isset($node->field_todo_list_reference[LANGUAGE_NONE][0]['nid'])) {

			$path = drupal_get_path('module', 'ec_task_credits');
			drupal_add_css ("$path/css/task_credits.css");

			$output = theme('vocab_list', array(
				'task_nid' => $node->nid,
				'task_list_nid' => $node->field_todo_list_reference[LANGUAGE_NONE][0]['nid'],
				)
			);
			$node->content['vocab_list_container'] = array(
				'#markup' => $output,
			);
			$node->content['credit_browse'] = array (
				'#type' => 'submit',
				'#name' => 'credit_browse',
				'#title' => t('My Field'),
				'#value' => t('Browse'),
			);
		}

	}
}

function ec_task_credits_preprocess_field(&$variables) {
	dpm(1);
	dpm(array_keys($variables));
//	if ($variables['element'] == 29523) {
//
//	}
}

//<-- ANGULAR PROJECT -------------------------------------------------------<
function ec_task_credits_menu() {
	$items = [];
	$items['angular2'] = [
		'access callback' => TRUE,
		'page callback' => 'ec_task_credits_callback',
	];
	return $items;
}

function ec_task_credits_callback() {
	$build['content'] = [
		'#theme' => [
			'angular_component',
		],
	];
	return $build;
}

function ec_task_credits_theme($existing, $type, $theme, $path) {
	return [
		'angular_component' => [
			'template' => 'angular-component',
			'variables' => array(),
			'path' => drupal_get_path('module', 'ec_task_credits') . '/theme',
		],
		'vocab_list' => [
			'template' => 'vocab-list',
			'variables' => array(),
			'path' => drupal_get_path('module', 'ec_task_credits') . '/theme',
		],
	];
}

/** Optional callback to manipulate and set variables */
function ec_task_credits_preprocess_vocab_list(&$vars) {
	// This variable will be available in the template file as $custom_value
	$task_list = node_load($vars['task_list_nid']);
	$node = node_load($vars['task_nid']);
	if ($task_list->title == 'Site Visits') {
		switch($node->title) {
			case 'Insulation':
				$vocab_insulation = taxonomy_vocabulary_machine_name_load('credit_list_insulation');
				$terms_insulation = entity_load('taxonomy_term', FALSE, array('vid' => $vocab_insulation->vid));
				$vars['terms'] = $terms_insulation;
				break;

			case 'Framing':
				$vocab_framing = taxonomy_vocabulary_machine_name_load('credit_list_framing');
				$terms_framing = entity_load('taxonomy_term', FALSE, array('vid' => $vocab_framing->vid));
				$vars['terms'] = $terms_framing;
				break;

			case 'Final + Blower Door':
				$vars['terms'] = '';
				break;

		}
	}

//	$element['upload'] = array(
//		'#name' => 'files[' . implode('_', $element['#parents']) . ']',
//		'#type' => 'file',
//		'#title' => t('Choose a file'),
//		'#title_display' => 'invisible',
//		'#size' => 22,
//		'#theme_wrappers' => array(),
//		'#weight' => -10,
//	);

}

function ec_task_credits_form_alter(&$form, &$form_state, $form_id) {
	if ($form_id == 'ol_todo_node_form') {
		if(isset($form['field_task_credits'])) {
			$form['field_task_credits']['#attributes']['class'][] = 'hide-field';
		}
	}

}
